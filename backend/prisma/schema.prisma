generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    username String @id
    password String
}

model Employee {
    id             String @id @default(uuid())
    firstName      String
    lastName       String
    email          String
    specialization String
    department     String
    Cv             Cv[]
}

model Cv {
    id               String       @id @default(uuid())
    name             String       @default("New CV")
    url              String?
    firstName        String?
    lastName         String?
    email            String?
    specialization   String?
    department       String?
    employee         Employee     @relation(fields: [employeeId], references: [id])
    employeeId       String
    EmployeeSkill    CvSkill[]
    EmployeeLanguage CvLanguage[]
    CvProject        CvProject[]
}

model Skill {
    id            String    @id @default(uuid())
    name          String
    EmployeeSkill CvSkill[]
}

model CvSkill {
    cv      Cv     @relation(fields: [cvId], references: [id])
    cvId    String
    skill   Skill  @relation(fields: [skillId], references: [id])
    skillId String

    level Int

    @@id([cvId, skillId])
}

model Language {
    id               String       @id @default(uuid())
    name             String
    EmployeeLanguage CvLanguage[]
}

model CvLanguage {
    cv         Cv       @relation(fields: [cvId], references: [id])
    cvId       String
    language   Language @relation(fields: [languageId], references: [id])
    languageId String

    level String

    @@id([cvId, languageId])
}

model Project {
    id               String      @id @default(uuid())
    name             String
    startDate        DateTime
    endDate          DateTime
    teamSize         Int
    techStack        TechStack[]
    roles            Role[]
    description      String
    responsibilities String

    CvProject CvProject[]
}

model TechStack {
    id        String   @id @default(uuid())
    name      String
    Project   Project? @relation(fields: [projectId], references: [id])
    projectId String?
}

model Role {
    id        String   @id @default(uuid())
    name      String
    Project   Project? @relation(fields: [projectId], references: [id])
    projectId String?
}

model CvProject {
    project   Project @relation(fields: [projectId], references: [id])
    projectId String
    cv        Cv      @relation(fields: [cvId], references: [id])
    cvId      String

    @@id([projectId, cvId])
}
